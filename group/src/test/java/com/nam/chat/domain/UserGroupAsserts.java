package com.nam.chat.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserGroupAllPropertiesEquals(UserGroup expected, UserGroup actual) {
        assertUserGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertUserGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserGroupAllUpdatablePropertiesEquals(UserGroup expected, UserGroup actual) {
        assertUserGroupUpdatableFieldsEquals(expected, actual);
        assertUserGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserGroupAutoGeneratedPropertiesEquals(UserGroup expected, UserGroup actual) {
        // empty method
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserGroupUpdatableFieldsEquals(UserGroup expected, UserGroup actual) {
        assertThat(expected)
            .as("Verify UserGroup relevant properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getLogin()).as("check login").isEqualTo(actual.getLogin()))
            .satisfies(e -> assertThat(e.getIsSeen()).as("check isSeen").isEqualTo(actual.getIsSeen()))
            .satisfies(e -> assertThat(e.getIsTurnOnNoti()).as("check isTurnOnNoti").isEqualTo(actual.getIsTurnOnNoti()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserGroupUpdatableRelationshipsEquals(UserGroup expected, UserGroup actual) {
        assertThat(expected)
            .as("Verify UserGroup relationships")
            .satisfies(e -> assertThat(e.getGroup()).as("check group").isEqualTo(actual.getGroup()));
    }
}
